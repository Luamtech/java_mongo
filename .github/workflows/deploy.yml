name: Build, Analyze and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  code-scan:
    name: 🔍 Code Analysis
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Code Scan
        run: |
          echo "
          ╔════════════════════════════════════════════════════════════════╗
          ║                   📦 CODE ANALYSIS                             ║
          ╚════════════════════════════════════════════════════════════════╝
          "
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -v trivy-cache:/root/.cache/ \
            --network host \
            aquasec/trivy:latest fs \
            --cache-dir /root/.cache/trivy \
            --no-progress \
            --exit-code 0 \
            --ignore-unfixed \
            --severity HIGH,CRITICAL \
            --scanners vuln \
            --format table \
            /workspace

  build:
    name: 🏗️ Build & Image Scan
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build timestamp
        id: timestamp
        run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: |
            ${{ github.event.repository.name }}:${{ steps.timestamp.outputs.timestamp }}
            ${{ github.event.repository.name }}:latest

      - name: Scan Image
        run: |
          echo "
          ╔════════════════════════════════════════════════════════════════╗
          ║                   🐋 DOCKER IMAGE SCAN                          ║
          ║     Tags: latest, ${{ steps.timestamp.outputs.timestamp }}     ║
          ╚════════════════════════════════════════════════════════════════╝
          "
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v trivy-cache:/root/.cache/ \
            --network host \
            aquasec/trivy:latest image \
            --cache-dir /root/.cache/trivy \
            --no-progress \
            --exit-code 0 \
            --ignore-unfixed \
            --severity HIGH,CRITICAL \
            --scanners vuln \
            --format table \
            ${{ github.event.repository.name }}:latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Tag images for registry
        run: |
          docker tag ${{ github.event.repository.name }}:${{ steps.timestamp.outputs.timestamp }} \
            ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.event.repository.name }}:${{ steps.timestamp.outputs.timestamp }}
          docker tag ${{ github.event.repository.name }}:latest \
            ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.event.repository.name }}:latest

  push-and-deploy:
    name: 🚀 Push & Deploy
    needs: [code-scan, build]
    runs-on: self-hosted
    steps:
      - name: Push Docker images
        run: |
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.event.repository.name }}:${{ steps.timestamp.outputs.timestamp }}
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Deploy containers
        run: |
          # Stop and remove existing containers
          docker stop ${{ github.event.repository.name }}-latest ${{ github.event.repository.name }}-timestamp || true
          docker rm ${{ github.event.repository.name }}-latest ${{ github.event.repository.name }}-timestamp || true

          # Run new containers
          docker run -d \
            --name ${{ github.event.repository.name }}-latest \
            ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.event.repository.name }}:latest

          docker run -d \
            --name ${{ github.event.repository.name }}-timestamp \
            ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.event.repository.name }}:${{ steps.timestamp.outputs.timestamp }}

      - name: Clean up
        run: |
          echo "🧹 Cleaning up old images and containers..."
          docker system prune -af --volumes

      - name: Show deployment summary
        run: |
          echo "
          ╔═══════════════════════════════════════════════════════════════╗
          ║                   🎉 DEPLOYMENT COMPLETED                      ║
          ║                   📅 $(date '+%Y-%m-%d %H:%M:%S')            ║
          ╚═══════════════════════════════════════════════════════════════╝
          " >> $GITHUB_STEP_SUMMARY